name: 1.0.0$(Build.BuildId)  # Dynamic versioning with build ID

variables:
  buildConfiguration: 'Release'
  dotNetVersion: '8.0.x'
  organizationName: 'kpat1045'
  projectName: 'StringLibrary'
  feedName: 'UpperCaseFeed'

stages:
- stage: Build
  jobs:
  - job: BuildAndPack
    pool:
      name: MyCustomPool
      demands:
      - Agent.OS -equals Windows_NT
    steps:
    - checkout: self
      clean: true

    # Verify feed access
    - powershell: |
        $feedUrl = "https://pkgs.dev.azure.com/$(organizationName)/$(projectName)/_packaging/$(feedName)/nuget/v3/index.json"
        Write-Host "##[section]Feed URL: $feedUrl"
        try {
          $response = Invoke-WebRequest -Uri $feedUrl -UseBasicParsing
          Write-Host "##[section]Feed access successful!"
        }
        catch {
          Write-Host "##vso[task.logissue type=error]Feed access failed: $($_.Exception.Message)"
          exit 1
        }
      displayName: 'Verify Feed Access'
      env:
        SYSTEM_ACCESSTOKEN: $(System.AccessToken)

    # Install .NET
    - task: UseDotNet@2
      displayName: 'Install .NET 8'
      inputs:
        version: $(dotNetVersion)
        performMultiLevelLookup: true

    # Build and pack
    - task: DotNetCoreCLI@2
      displayName: 'Build & Pack'
      inputs:
        command: 'pack'
        projects: 'StringLibrary/StringLibrary.csproj'
        arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory) -p:Version=$(Build.BuildNumber)'

    # Push to feed
    - task: NuGetAuthenticate@1
      displayName: 'Authenticate with Azure Artifacts'

    - task: DotNetCoreCLI@2
      displayName: 'Push to Feed'
      inputs:
        command: 'push'
        packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg'
        publishVstsFeed: '$(feedName)'

- stage: Test
  dependsOn: Build
  condition: succeeded()
  jobs:
  - job: RunTests
    pool:
      name: MyCustomPool
    steps:
    - checkout: self
    - task: DotNetCoreCLI@2
      displayName: 'Run Tests'
      inputs:
        command: 'test'
        projects: '**/*Tests/*.csproj'
        arguments: '--configuration $(buildConfiguration)'