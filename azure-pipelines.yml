name: 1.0.0$(Rev:r)

trigger:
- main

variables:
  buildConfiguration: 'Release'
  dotNetVersion: '8.0.x'
  
  # Artifacts Feed Configuration - UPDATE THESE!
  organizationName: 'kpat1045'
  projectName: 'StringLibrary'  # Your DevOps project name
  feedName: 'UpperCaseFeed'          # Your feed name

pool:
  name: MyCustomPool  # Your self-hosted agent pool
  demands:
  - Agent.OS -equals Windows_NT  # Requires Windows agent

steps:
  # 1. Checkout code
  - checkout: self
    clean: true

  # 2. Install .NET 8 SDK
  - task: UseDotNet@2
    displayName: 'Install .NET 8'
    inputs:
      version: $(dotNetVersion)
      performMultiLevelLookup: true

  # 3. Build StringLibrary FIRST
  - task: DotNetCoreCLI@2
    displayName: 'Build StringLibrary'
    inputs:
      command: 'build'
      projects: 'StringLibrary/StringLibrary.csproj'
      arguments: '--configuration $(buildConfiguration)'

  # 4. Create NuGet package
  - task: DotNetCoreCLI@2
    displayName: 'Pack StringLibrary'
    inputs:
      command: 'pack'
      packagesToPack: 'StringLibrary/StringLibrary.csproj'
      configuration: $(buildConfiguration)
      outputDir: '$(Build.ArtifactStagingDirectory)/packages'
      arguments: '-p:Version=1.0.0-ci$(Build.BuildId)'

  # 5. Authenticate with Azure Artifacts
  - task: NuGetAuthenticate@1
    displayName: 'NuGet Auth'

  # 6. Push to Azure Artifacts
  - task: NuGetCommand@2
    displayName: 'Push Package'
    inputs:
      command: 'push'
      packagesToPush: '$(Build.ArtifactStagingDirectory)/packages/*.nupkg'
      nuGetFeedType: 'internal'
      publishVstsFeed: '$(feedName)'
      allowPackageConflicts: false

  # 7. Build ShowCase AFTER package is available
  - task: DotNetCoreCLI@2
    displayName: 'Build ShowCase'
    inputs:
      command: 'build'
      projects: 'ShowCase/ShowCase.csproj'
      arguments: '--configuration $(buildConfiguration) --no-restore'