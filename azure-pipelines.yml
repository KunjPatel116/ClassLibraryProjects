name: 1.0.0$(Build.BuildId)

variables:
  buildConfiguration: 'Release'
  dotNetVersion: '8.0.x'
  organizationName: 'kpat1045'
  projectName: 'StringLibrary'
  feedName: 'StringLibraryFeed'

stages:
- stage: Build
  jobs:
  - job: BuildAndPack
    pool:
      name: MyCustomPool
      demands:
      - Agent.OS -equals Windows_NT
    steps:
    - checkout: self
      clean: true

    # Install .NET 8
    - task: UseDotNet@2
      displayName: 'Install .NET 8'
      inputs:
        version: $(dotNetVersion)
        performMultiLevelLookup: true

    - task: DotNetCoreCLI@2
         displayName: 'Build & Pack'
  inputs:
    command: 'pack'
    packagesToPack: 'StringLibrary/StringLibrary.csproj'  # Explicitly specify
    arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'

    # Configure NuGet authentication
    - task: NuGetAuthenticate@1
      displayName: 'NuGet Authenticate'

    # Push using explicit feed URL
    - powershell: |
        $packagePath = Get-ChildItem -Path "$(Build.ArtifactStagingDirectory)" -Filter *.nupkg | Select-Object -First 1 -ExpandProperty FullName
        $feedUrl = "https://pkgs.dev.azure.com/$(organizationName)/$(projectName)/_packaging/$(feedName)/nuget/v3/index.json"
        
        Write-Host "Pushing package: $packagePath"
        Write-Host "To feed: $feedUrl"
        
        dotnet nuget push "$packagePath" `
          --source "$feedUrl" `
          --api-key AzureArtifacts `
          --skip-duplicate
      displayName: 'Push to Azure Artifacts'
      env:
        SYSTEM_ACCESSTOKEN: $(System.AccessToken)

- stage: Test
  dependsOn: Build
  condition: succeeded()
  jobs:
  - job: RunTests
    pool:
      name: MyCustomPool
    steps:
    - checkout: self
    - task: DotNetCoreCLI@2
      displayName: 'Run Tests'
      inputs:
        command: 'test'
        projects: '**/*Tests/*.csproj'
        arguments: '--configuration $(buildConfiguration)'