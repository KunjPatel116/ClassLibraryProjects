name: 1.0.0$(Rev:r)

trigger:
  - main

variables:
  buildConfiguration: 'Release'
  dotNetVersion: '8.0.x'
  solutionPath: '**/*.sln'
  libraryProject: 'StringLibrary/StringLibrary.csproj'
  
  # Versioning
  majorVersion: '1'
  minorVersion: '0'
  patchVersion: '0'
  
  # Artifacts Feed Configuration
  feedName: 'UpperCaseFeed' # MUST match exactly
  feedProject: 'YourProjectName' # The DevOps project containing the feed

steps:
  # 1. Checkout code
  - checkout: self
    clean: true
    fetchDepth: 1

  # 2. Install .NET 8 SDK
  - task: UseDotNet@2
    displayName: 'Install .NET 8 SDK'
    inputs:
      version: $(dotNetVersion)
      performMultiLevelLookup: true

  # 3. Restore packages
  - task: DotNetCoreCLI@2
    displayName: 'Restore packages'
    inputs:
      command: 'restore'
      projects: '$(solutionPath)'
      feedsToUse: 'select'
      vstsFeed: '$(feedName)'

  # 4. Build solution
  - task: DotNetCoreCLI@2
    displayName: 'Build solution'
    inputs:
      command: 'build'
      projects: '$(solutionPath)'
      arguments: '--configuration $(buildConfiguration) --no-restore'

  # 5. Pack NuGet package
  - task: DotNetCoreCLI@2
    displayName: 'Pack NuGet package'
    inputs:
      command: 'pack'
      packagesToPack: '$(libraryProject)'
      configuration: $(buildConfiguration)
      outputDir: '$(Build.ArtifactStagingDirectory)'
      nobuild: true
      includesymbols: true
      arguments: '-p:Version=$(majorVersion).$(minorVersion).$(patchVersion)'

  # 6. Authenticate with Azure Artifacts
  - task: NuGetAuthenticate@1
    displayName: 'Authenticate with Azure Artifacts'

  # 7. Push to Azure Artifacts (with full feed URL)
  - task: NuGetCommand@2
    displayName: 'Push to Azure Artifacts'
    inputs:
      command: 'push'
      packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg'
      nuGetFeedType: 'internal'
      publishVstsFeed: '$(feedProject)/$(feedName)' # Format: ProjectName/FeedName
      allowPackageConflicts: false