name: 1.0.0$(Build.BuildId)

variables:
  buildConfiguration: 'Release'
  dotNetVersion: '8.0.x'
  organizationName: 'kpat1045'
  projectName: 'StringLibrary'
  feedName: 'UpperCaseFeed'

stages:
- stage: Build
  jobs:
  - job: BuildAndPack
    pool:
      name: MyCustomPool
      demands:
      - Agent.OS -equals Windows_NT
    steps:
    - checkout: self
      clean: true

    # Modified feed verification - uses NuGet instead of direct HTTP
    - powershell: |
        $feedUrl = "https://pkgs.dev.azure.com/$(organizationName)/$(projectName)/_packaging/$(feedName)/nuget/v3/index.json"
        Write-Host "##[section]Testing feed accessibility via NuGet: $feedUrl"
        
        # Temporary add source to test connectivity
        dotnet nuget add source $feedUrl --name testfeed --username patel --password $(System.AccessToken) --store-password-in-clear-text
        
        # List sources to verify
        dotnet nuget list source
        
        # Basic test query
        dotnet nuget search "StringLibrary" --source $feedUrl --take 1
      displayName: 'Verify Feed via NuGet'
      env:
        SYSTEM_ACCESSTOKEN: $(System.AccessToken)

    # Install .NET 8
    - task: UseDotNet@2
      displayName: 'Install .NET 8'
      inputs:
        version: $(dotNetVersion)
        performMultiLevelLookup: true

    # Build and pack
    - task: DotNetCoreCLI@2
      displayName: 'Build & Pack'
      inputs:
        command: 'pack'
        projects: 'StringLibrary/StringLibrary.csproj'
        arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory) -p:Version=$(Build.BuildNumber)'

    # Authenticate with Azure Artifacts
    - task: NuGetAuthenticate@1
      displayName: 'NuGet Authenticate'
      inputs:
        forceReinstallCredentialProvider: true

    # Push to feed with explicit credentials
    - task: DotNetCoreCLI@2
      displayName: 'Push to Azure Artifacts'
      inputs:
        command: 'push'
        packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg'
        feedsToUse: 'select'
        vstsFeed: '$(organizationName)/$(projectName)/$(feedName)'
      env:
        VSS_NUGET_EXTERNAL_FEED_ENDPOINTS: |
          {
            "endpointCredentials": [{
              "endpoint":"https://pkgs.dev.azure.com/$(organizationName)/$(projectName)/_packaging/$(feedName)/nuget/v3/index.json",
              "username":"$(System.AccessToken)",
              "password":"$(System.AccessToken)"
            }]
          }

- stage: Test
  dependsOn: Build
  condition: succeeded()
  jobs:
  - job: RunTests
    pool:
      name: MyCustomPool
    steps:
    - checkout: self
    - task: DotNetCoreCLI@2
      displayName: 'Run Tests'
      inputs:
        command: 'test'
        projects: '**/*Tests/*.csproj'
        arguments: '--configuration $(buildConfiguration)'