name: $(Date:yyyyMMdd)$(Rev:.r)

trigger:
  - main

variables:
  buildConfiguration: 'Release'
  dotNetVersion: '8.0.x'
  majorVersion: '1'
  minorVersion: '0'
  patchVersion: '0'
  projectPath: 'UpperCaseCheckLibrary/UpperCaseCheckLibrary.csproj' # Explicit path to your project

pool:
  name: MyCustomPool
  demands:
    - agent.name -equals MyNewAgent

steps:
  # Install .NET 8 SDK
  - task: UseDotNet@2
    displayName: 'Install .NET 8 SDK'
    inputs:
      version: $(dotNetVersion)

  # Restore NuGet packages
  - task: DotNetCoreCLI@2
    displayName: 'Restore dependencies'
    inputs:
      command: 'restore'
      projects: '$(projectPath)'
      feedsToUse: 'select'
      vstsFeed: 'UpperCaseFeed'

  # Build the solution
  - task: DotNetCoreCLI@2
    displayName: 'Build solution'
    inputs:
      command: 'build'
      projects: '$(projectPath)'
      arguments: '--configuration $(buildConfiguration) --no-restore'

  # Pack NuGet package (updated with explicit path)
  - task: DotNetCoreCLI@2
    displayName: 'Pack NuGet package'
    inputs:
      command: 'pack'
      packagesToPack: '$(projectPath)'
      versioningScheme: 'byPrereleaseNumber'
      majorVersion: $(majorVersion)
      minorVersion: $(minorVersion)
      patchVersion: $(patchVersion)
      configuration: $(buildConfiguration)
      outputDir: '$(Build.ArtifactStagingDirectory)'
      nobuild: true
      includesymbols: true
      includesource: true

  # Push to Azure Artifacts
  - task: NuGetAuthenticate@1
    displayName: 'Authenticate with Azure Artifacts'

  - task: NuGetCommand@2
    displayName: 'Push to UpperCaseFeed'
    inputs:
      command: 'push'
      feedsToUse: 'select'
      packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg'
      nuGetFeedType: 'internal'
      publishVstsFeed: 'UpperCaseFeed'
      allowPackageConflicts: true