name: $(Date:yyyyMMdd)$(Rev:.r)

trigger:
  - main

variables:
  buildConfiguration: 'Release'
  dotNetVersion: '8.0.x'
  solutionPath: '**/*.sln'
  projectPath: '**/UpperCaseCheckLibrary.csproj'
  testProjectPath: '**/*Tests.csproj'

pool:
  name: MyCustomPool
  demands:
    - agent.name -equals MyNewAgent

steps:
  # Checkout code
  - checkout: self
    clean: true
    fetchDepth: 1

  # Debugging: Show directory structure
  - script: tree /F
    displayName: 'Show directory structure'

  # Install .NET 8 SDK
  - task: UseDotNet@2
    displayName: 'Install .NET 8 SDK'
    inputs:
      version: $(dotNetVersion)
      performMultiLevelLookup: true
      packageType: 'sdk'

  # Restore NuGet packages
  - task: DotNetCoreCLI@2
    displayName: 'Restore dependencies'
    inputs:
      command: 'restore'
      projects: '$(solutionPath)'
      feedsToUse: 'select'
      vstsFeed: 'UpperCaseFeed'
      noCache: true
      verbosityRestore: 'detailed'

  # Build solution
  - task: DotNetCoreCLI@2
    displayName: 'Build solution'
    inputs:
      command: 'build'
      projects: '$(solutionPath)'
      arguments: '--configuration $(buildConfiguration) --no-restore --verbosity detailed'

  # Run tests (with corrected condition)
  - task: DotNetCoreCLI@2
    displayName: 'Run unit tests'
    condition: and(succeeded(), ne(variables['testProjectPath'], ''))
    inputs:
      command: 'test'
      projects: '$(testProjectPath)'
      arguments: '--configuration $(buildConfiguration) --no-build --logger "trx"'

  # Pack NuGet package
  - task: DotNetCoreCLI@2
    displayName: 'Pack NuGet package'
    inputs:
      command: 'pack'
      packagesToPack: '$(projectPath)'
      versioningScheme: 'byPrereleaseNumber'
      majorVersion: '1'
      minorVersion: '0'
      patchVersion: '0'
      configuration: $(buildConfiguration)
      outputDir: '$(Build.ArtifactStagingDirectory)'
      nobuild: true
      includesymbols: true
      verbosityPack: 'detailed'

  # Push to Azure Artifacts
  - task: NuGetAuthenticate@1
    displayName: 'Authenticate with Azure Artifacts'

  - task: NuGetCommand@2
    displayName: 'Push to UpperCaseFeed'
    inputs:
      command: 'push'
      packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg'
      nuGetFeedType: 'internal'
      publishVstsFeed: 'UpperCaseFeed'
      allowPackageConflicts: false
      verbosityPush: 'detailed'